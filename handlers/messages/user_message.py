from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from services.api.youtubeMP3 import get_youtube, is_music
from keyboards.inline_keyboard import inline_row

router = Router()


class LinkState(StatesGroup):
    link = State()


@router.message(F.text == "üöë–ü–æ–º–æ—â—åüöë")
async def help_for_user(message: Message):
    await message.answer(
        "üëã –ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å?\n\n"
        "–ü—Ä–æ—Å—Ç–æ —Å–∫–∏–Ω—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–µ—Å–Ω—é ‚Äî –∏ —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –≥–æ—Ç–æ–≤—ã–π –∞—É–¥–∏–æ—Ñ–∞–π–ª (mp3).\n\n"
        "‚ö†Ô∏è –Ø —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å –º—É–∑—ã–∫–∞–ª—å–Ω—ã–º–∏ –≤–∏–¥–µ–æ."
    )


@router.message(F.text.startswith("https"))
async def get_link(message: Message, state: FSMContext):
    url = message.text.strip()
    if "youtube.com" in url or "youtu.be" in url:
        category_id = is_music(url)
        if category_id is True:
            # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –≤ FSM
            await state.update_data(link=url)

            await message.delete()

            thumbnail, title = get_youtube(url)
            await message.answer_photo(
                photo=thumbnail,
                caption=title,
                reply_markup=inline_row,
            )
        else:
            await message.answer(category_id)
    else:
        await message.answer("–≠—Ç–æ –Ω–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube!")
